// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PadariaTech.Data;

namespace PadariaTech.Migrations
{
    [DbContext(typeof(BakeryContext))]
    [Migration("20210726225752_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PadariaTech.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("Measurement")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int?>("RecipeId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct")
                        .IsUnique();

                    b.HasIndex("RecipeId1");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("PadariaTech.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Measure")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)");

                    b.Property<double>("StockQuantity")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("PadariaTech.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BakedProductId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Portion")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BakedProductId")
                        .IsUnique();

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("PadariaTech.Models.BakedProduct", b =>
                {
                    b.HasBaseType("PadariaTech.Models.Product");

                    b.HasDiscriminator().HasValue("BakedProduct");
                });

            modelBuilder.Entity("PadariaTech.Models.Ingredient", b =>
                {
                    b.HasOne("PadariaTech.Models.Product", "Product")
                        .WithOne("Ingredient")
                        .HasForeignKey("PadariaTech.Models.Ingredient", "IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PadariaTech.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId1");

                    b.Navigation("Product");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("PadariaTech.Models.Recipe", b =>
                {
                    b.HasOne("PadariaTech.Models.BakedProduct", "BakedProduct")
                        .WithOne("Recipe")
                        .HasForeignKey("PadariaTech.Models.Recipe", "BakedProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BakedProduct");
                });

            modelBuilder.Entity("PadariaTech.Models.Product", b =>
                {
                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("PadariaTech.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("PadariaTech.Models.BakedProduct", b =>
                {
                    b.Navigation("Recipe");
                });
#pragma warning restore 612, 618
        }
    }
}
